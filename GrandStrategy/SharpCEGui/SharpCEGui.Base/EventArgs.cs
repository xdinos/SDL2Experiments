namespace SharpCEGui.Base
{
    /// <summary>
    /// Base class used as the argument to all subscribers Event object.
    /// 
    /// The base EventArgs class does not contain any useful information, it is intended
    /// to be specialised for each type of event that can be generated by objects within
    /// the system.  The use of this base class allows all event subscribers to have the
    /// same function signature.
    /// 
    /// The \a handled field is used to signal whether an event was actually handled or not.  While
    /// the event system does not look at this value, code at a higher level can use it to determine
    /// how far to propagate an event.
    /// </summary>
    public class EventArgs : global::System.EventArgs
    {
        /// <summary>
        /// 
        /// </summary>
        public new static readonly EventArgs Empty = new EventArgs();

        /// <summary>
        ///	handlers should increment this if they handled the event.
        /// </summary>
        public int handled { get; set; }
    }

    /// <summary>
    /// EventArgs subclass used for linked events, that is an event fired on an
    /// EventSet that was triggered by some other event (either on the same
    /// EventSet or a different EventSet.
    /// </summary>
    public class LinkedEventArgs : EventArgs
    {
        public LinkedEventArgs(EventArgs args, EventSet event_set)
        {
            originalArgs = args;
            sourceEventSet = event_set;
        }

        //! a reference to the EventArgs passed to handlers of the triggering event.
        public EventArgs originalArgs;
        //! pointer to the EventSet that is the source of this linked event.
        public EventSet sourceEventSet;
    }
}